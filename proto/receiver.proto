// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/receiver.proto
syntax = "proto3";
option go_package = "./grpc/receiver";

// 定义Receiver服务
service Receiver {
  // 定义Post方法，接受Data消息， 并返回Reply消息
  rpc Post (Data) returns (Reply) {}
}

message Data {
  DeviceSystemInfo device_system_info = 1;
  SystemInfo system_info = 2;
  CpuInfo cpu_info = 3;
  MemoryInfo memory_info = 4;
  LoadAvg load_avg = 5;
  NetworkInfo network_info = 6;
}

message DeviceSystemInfo {
  string product_name = 1;
  string manufacturer = 2;
  string serial_number = 3;
  string version = 4;
}

message SystemInfo {
  string hostname = 1;
  uint64 uptime = 2;
  string os = 3; // linux
  string platform = 4; // debian
  string platform_version = 5; // 11.2
  string kernel_version = 6; // 5.16.0-0.bpo.4-amd64
  string kernel_arch = 7; // x86_64
  string virtualization_role = 8; // host=宿主 guest=虚拟机
}

message CpuInfo {
  string name = 1;
  uint32 logical_count = 2;
  uint32 physical_count = 3;
}

message MemoryInfo {
  uint64 physical_memory_total = 1;
  float physical_memory_used_percent = 2;
  uint64 swap_memory_total = 3;
  float swap_memory_used_percent = 4;
}

message LoadAvg {
  float load_1min = 1;
  float load_5min = 2;
  float load_15min = 3;
}

message NetworkInfo {
  string main_ip = 1; // 默认路由对应网卡的第一个IP
  repeated Interface interfaces = 2;
}

message Interface {
  string name = 1;
  uint32 MTU = 2;
  string hwaddr = 3;
  repeated string IPs = 4;
}

message Reply {
  int32 code = 1;
  string message = 2;
}